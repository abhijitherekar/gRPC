// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package customer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CustomerRequest struct {
	Name                 string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string                     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Id                   int32                      `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Phone                string                     `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Addr                 []*CustomerRequest_Address `protobuf:"bytes,5,rep,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CustomerRequest) Reset()         { *m = CustomerRequest{} }
func (m *CustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerRequest) ProtoMessage()    {}
func (*CustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_b47265dc98cd7193, []int{0}
}
func (m *CustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerRequest.Unmarshal(m, b)
}
func (m *CustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerRequest.Marshal(b, m, deterministic)
}
func (dst *CustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerRequest.Merge(dst, src)
}
func (m *CustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerRequest.Size(m)
}
func (m *CustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerRequest proto.InternalMessageInfo

func (m *CustomerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CustomerRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CustomerRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CustomerRequest) GetAddr() []*CustomerRequest_Address {
	if m != nil {
		return m.Addr
	}
	return nil
}

type CustomerRequest_Address struct {
	House                int32    `protobuf:"varint,1,opt,name=house,proto3" json:"house,omitempty"`
	Street               string   `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerRequest_Address) Reset()         { *m = CustomerRequest_Address{} }
func (m *CustomerRequest_Address) String() string { return proto.CompactTextString(m) }
func (*CustomerRequest_Address) ProtoMessage()    {}
func (*CustomerRequest_Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_b47265dc98cd7193, []int{0, 0}
}
func (m *CustomerRequest_Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerRequest_Address.Unmarshal(m, b)
}
func (m *CustomerRequest_Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerRequest_Address.Marshal(b, m, deterministic)
}
func (dst *CustomerRequest_Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerRequest_Address.Merge(dst, src)
}
func (m *CustomerRequest_Address) XXX_Size() int {
	return xxx_messageInfo_CustomerRequest_Address.Size(m)
}
func (m *CustomerRequest_Address) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerRequest_Address.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerRequest_Address proto.InternalMessageInfo

func (m *CustomerRequest_Address) GetHouse() int32 {
	if m != nil {
		return m.House
	}
	return 0
}

func (m *CustomerRequest_Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *CustomerRequest_Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CustomerRequest_Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CustomerRequest_Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type CustomerResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerResponse) Reset()         { *m = CustomerResponse{} }
func (m *CustomerResponse) String() string { return proto.CompactTextString(m) }
func (*CustomerResponse) ProtoMessage()    {}
func (*CustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_b47265dc98cd7193, []int{1}
}
func (m *CustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerResponse.Unmarshal(m, b)
}
func (m *CustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerResponse.Marshal(b, m, deterministic)
}
func (dst *CustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerResponse.Merge(dst, src)
}
func (m *CustomerResponse) XXX_Size() int {
	return xxx_messageInfo_CustomerResponse.Size(m)
}
func (m *CustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerResponse proto.InternalMessageInfo

func (m *CustomerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CustomerId struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerId) Reset()         { *m = CustomerId{} }
func (m *CustomerId) String() string { return proto.CompactTextString(m) }
func (*CustomerId) ProtoMessage()    {}
func (*CustomerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_b47265dc98cd7193, []int{2}
}
func (m *CustomerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerId.Unmarshal(m, b)
}
func (m *CustomerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerId.Marshal(b, m, deterministic)
}
func (dst *CustomerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerId.Merge(dst, src)
}
func (m *CustomerId) XXX_Size() int {
	return xxx_messageInfo_CustomerId.Size(m)
}
func (m *CustomerId) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerId.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerId proto.InternalMessageInfo

func (m *CustomerId) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func init() {
	proto.RegisterType((*CustomerRequest)(nil), "customer.CustomerRequest")
	proto.RegisterType((*CustomerRequest_Address)(nil), "customer.CustomerRequest.Address")
	proto.RegisterType((*CustomerResponse)(nil), "customer.CustomerResponse")
	proto.RegisterType((*CustomerId)(nil), "customer.CustomerId")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerClient is the client API for Customer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerClient interface {
	CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
	GetCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (Customer_GetCustomerClient, error)
}

type customerClient struct {
	cc *grpc.ClientConn
}

func NewCustomerClient(cc *grpc.ClientConn) CustomerClient {
	return &customerClient{cc}
}

func (c *customerClient) CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.Customer/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) GetCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (Customer_GetCustomerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Customer_serviceDesc.Streams[0], "/customer.Customer/GetCustomer", opts...)
	if err != nil {
		return nil, err
	}
	x := &customerGetCustomerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Customer_GetCustomerClient interface {
	Recv() (*CustomerRequest, error)
	grpc.ClientStream
}

type customerGetCustomerClient struct {
	grpc.ClientStream
}

func (x *customerGetCustomerClient) Recv() (*CustomerRequest, error) {
	m := new(CustomerRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CustomerServer is the server API for Customer service.
type CustomerServer interface {
	CreateCustomer(context.Context, *CustomerRequest) (*CustomerResponse, error)
	GetCustomer(*CustomerId, Customer_GetCustomerServer) error
}

func RegisterCustomerServer(s *grpc.Server, srv CustomerServer) {
	s.RegisterService(&_Customer_serviceDesc, srv)
}

func _Customer_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Customer/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CreateCustomer(ctx, req.(*CustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_GetCustomer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CustomerId)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CustomerServer).GetCustomer(m, &customerGetCustomerServer{stream})
}

type Customer_GetCustomerServer interface {
	Send(*CustomerRequest) error
	grpc.ServerStream
}

type customerGetCustomerServer struct {
	grpc.ServerStream
}

func (x *customerGetCustomerServer) Send(m *CustomerRequest) error {
	return x.ServerStream.SendMsg(m)
}

var _Customer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.Customer",
	HandlerType: (*CustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _Customer_CreateCustomer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCustomer",
			Handler:       _Customer_GetCustomer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "customer.proto",
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor_customer_b47265dc98cd7193) }

var fileDescriptor_customer_b47265dc98cd7193 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0x80, 0xd7, 0x6e, 0xdd, 0xcf, 0x19, 0x4c, 0x09, 0x43, 0x62, 0xaf, 0x66, 0x2f, 0xa4, 0x17,
	0x52, 0x64, 0xe2, 0x03, 0xe8, 0x2e, 0xa4, 0x78, 0x97, 0x37, 0xa8, 0xcd, 0x81, 0x15, 0x6c, 0x53,
	0x73, 0x52, 0xa4, 0xf8, 0x1c, 0x5e, 0xf8, 0xb6, 0xd2, 0xb4, 0xa9, 0xa0, 0xee, 0x2e, 0xdf, 0xe9,
	0xc7, 0xe9, 0x47, 0x08, 0x6c, 0xf2, 0x86, 0x8c, 0x2a, 0x51, 0x27, 0xb5, 0x56, 0x46, 0xb1, 0xa5,
	0xe3, 0xe8, 0xd3, 0x87, 0xb3, 0xc3, 0x00, 0x02, 0xdf, 0x1a, 0x24, 0xc3, 0x18, 0xcc, 0xaa, 0xac,
	0x44, 0xee, 0xed, 0xbc, 0x78, 0x25, 0xec, 0x99, 0x6d, 0x21, 0xc0, 0x32, 0x2b, 0x5e, 0xb9, 0x6f,
	0x87, 0x3d, 0xb0, 0x0d, 0xf8, 0x85, 0xe4, 0xd3, 0x9d, 0x17, 0x07, 0xc2, 0x2f, 0x64, 0x67, 0xd5,
	0x47, 0x55, 0x21, 0x9f, 0xf5, 0x96, 0x05, 0x76, 0x0f, 0xb3, 0x4c, 0x4a, 0xcd, 0x83, 0xdd, 0x34,
	0x5e, 0xef, 0xaf, 0x92, 0x31, 0xe6, 0xd7, 0x8f, 0x93, 0x07, 0x29, 0x35, 0x12, 0x09, 0xab, 0x87,
	0x1f, 0xb0, 0x18, 0x06, 0xdd, 0xde, 0xa3, 0x6a, 0xa8, 0x4f, 0x0a, 0x44, 0x0f, 0xec, 0x02, 0xe6,
	0x64, 0x34, 0xa2, 0x19, 0xa2, 0x06, 0xea, 0xfa, 0xf3, 0xc2, 0xb4, 0xb6, 0x6b, 0x25, 0xec, 0xb9,
	0xdb, 0x40, 0x26, 0x33, 0x63, 0x99, 0x05, 0xc6, 0x61, 0x91, 0xab, 0xa6, 0x32, 0xba, 0xe5, 0x81,
	0x9d, 0x3b, 0x8c, 0x6e, 0xe0, 0xfc, 0xa7, 0x8e, 0x6a, 0x55, 0x91, 0xb5, 0xa9, 0xc9, 0x73, 0x24,
	0xb2, 0x1d, 0x4b, 0xe1, 0x30, 0xba, 0x06, 0x70, 0x76, 0x2a, 0x3b, 0xef, 0x19, 0xdb, 0x77, 0xa5,
	0xe5, 0x70, 0x85, 0x0e, 0xf7, 0x5f, 0x1e, 0x2c, 0x9d, 0xc8, 0x52, 0xd8, 0x1c, 0x34, 0x66, 0x06,
	0xc7, 0xc9, 0xe5, 0xc9, 0xab, 0x09, 0xc3, 0xff, 0x3e, 0xf5, 0x5d, 0xd1, 0x84, 0x3d, 0xc2, 0xfa,
	0x09, 0xcd, 0xb8, 0x67, 0xfb, 0x57, 0x4e, 0x65, 0x78, 0x7a, 0x7b, 0x34, 0xb9, 0xf5, 0x5e, 0xe6,
	0xf6, 0x69, 0xdc, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xd9, 0x1c, 0xd1, 0x2c, 0x02, 0x00,
	0x00,
}
